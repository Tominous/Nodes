options:
	prefix: &f&l[&9&lNodes&f&l]

command /node [<item type>] [<number>] [<player>]:
	aliases: /nodeblock, /nodes
	usage: /node (block) (amount) (player)
	trigger:
		if arg-1 is not set:
			send "{@prefix} &c/node (block) (amount) (player)"
		if arg-1 is set:
			if arg-2 is not set:
				send "{@prefix} &c/node (block) (amount) (player)"
			if arg-2 is set:
				if arg-3 is not set:
					give arg-2 of arg-1 named "&b&lNode" with lore "&7Type - %{_i}%" to player
				if arg-3 is set:
					give arg-2 of arg-1 named "&b&lNode" with lore "&7Type - %{_i}%" to arg-3

on place:
	if name of player's held item is "&b&lNode":
		if lore of player's held item contains "&7Type":
			if player is not sneaking:
				add location of event-block to {nodes::%player%::locations::*}
				set {nodes::%player%::locations::%location of event-block%::level} to 1
				set {nodes::%player%::locations::%location of event-block%::timer} to ({nodes::%player%::locations::%location of event-block%::level}*(60/1))
				set {nodes::%player%::locations::%location of event-block%::location} to location of event-block
				set {_lore::*} to uncolored lore of player's held item
				replace all "Type - " with "" in {_lore::*}
				send action bar "&a&lPlaced a &9&l%{_lore::*}% &a&lnode!" to player

on break:
	if {nodes::%player%::locations::%location of event-block%::*} is set:
		cancel event
		if player is sneaking:
			set event-block to air
			clear {nodes::%player%::locations::%location of event-block%::*}
			delete {nodes::%player%::locations::%location of event-block%}
			drop 1 of (type of event-block) named "&b&lNode" with lore "&7Type - %(type of event-block)%" at location of block 1 metre above event-block
		else if player is not sneaking:
			if {nodes::%player%::locations::%location of event-block%::timer} <= 0:
				drop 1 of (type of event-block) at location of block 1 metre above event-block
				set {nodes::%player%::locations::%location of event-block%::timer} to ({nodes::%player%::locations::%location of event-block%::level}*(60/1))
			else if {nodes::%player%::locations::%location of event-block%::timer} > 0:
				send action bar "&c&lTime left - %{nodes::%player%::locations::%location of event-block%::timer}% seconds" to player

#!make it so that they can level up!#

on right click:
	if {nodes::%player%::locations::%location of event-block%::*} is set:
		if {nodes::%player%::locations::%location of event-block%::timer} >= 1:
			send action bar "&c&lTime left - %{nodes::%player%::locations::%location of event-block%::timer}% seconds" to player
		if {nodes::%player%::locations::%location of event-block%::timer} < 1:
			send action bar "&a&lReady!" to player

every 1 second in world "world":
	loop all players:
		if {nodes::%loop-player%::locations::*} is set:
			loop {nodes::%loop-player%::locations::*}:
				if {nodes::%loop-player%::locations::%loop-value-2%::timer} >= 1:
					remove 1 from {nodes::%loop-player%::locations::%loop-value-2%::timer}
					if block at location of block 1 metre above {nodes::%loop-player%::locations::%loop-value-2%::location} is air:
						set {_holo} to new hologram at location above {nodes::%loop-player%::locations::%loop-value-2%::location}
						add text "&c&l%{nodes::%loop-player%::locations::%loop-value-2%::timer}%" to hologram {_holo}
						hide {_holo} from all players
						show {_holo} to loop-player
						wait 1 second
						delete hologram {_holo}
				else if {nodes::%loop-player%::locations::%loop-value-2%::timer} < 1:
					if block at location of block 1 metre above {nodes::%loop-player%::locations::%loop-value-2%::location} is air:
						set {_holo} to new hologram at location above {nodes::%loop-player%::locations::%loop-value-2%::location}
						add text "&a&lReady!" to hologram {_holo}
						hide {_holo} from all players
						show {_holo} to loop-player
						wait 1 second
						delete hologram {_holo}


















#on right click:
#	if name of player's held item is "&b&lNode":
#		if lore of player's held item contains "&7Type":
#			if player is sneaking:
#				send "Debug - sneaking"
#				if {nodes::%player%::locations::%location of targeted block%::*} is set:
#					send "Debug - block is set"
#					if type of targeted block is type of player's held item:
#						send "Debug - block is same as item"
#						set event-block to air
#						set {nodes::%player%::locations::%location of targeted block%::level} to ({nodes::%player%::locations::%location of targeted block%::level}+1)
#						set {nodes::%player%::locations::%location of event-block%::timer} to ({nodes::%player%::locations::%location of event-block%::level}*(60/1))
#						send action bar "&a&lUpgraded the node! Level &9&l%{nodes::%player%::locations::%location of targeted block%::level}%" to player
#					else:
#						send "Debug - block is not same as item"
#						add location of event-block to {nodes::%player%::locations::*}
#						set {nodes::%player%::locations::%location of event-block%::level} to 1
#						set {nodes::%player%::locations::%location of event-block%::timer} to ({nodes::%player%::locations::%location of event-block%::level}*(60/1))
#						set {nodes::%player%::locations::%location of event-block%::location} to location of event-block
#						set {_lore::*} to uncolored lore of player's held item
#						replace all "||Type - " with "" in {_lore::*}
#						set {nodes::%player%::locations::%location of event-block%::type} to {_lore::*} parsed as item type
#						send action bar "&a&lPlaced a &9&l%{_lore::*}% &a&lnode!" to player
#				if {nodes::%player%::locations::%location of targeted block%::*} is not set:
#					send "Debug - block is not set"
#					add location of event-block to {nodes::%player%::locations::*}
#					set {nodes::%player%::locations::%location of event-block%::level} to 1
#					set {nodes::%player%::locations::%location of event-block%::timer} to ({nodes::%player%::locations::%location of event-block%::level}*(60/1))
#					set {nodes::%player%::locations::%location of event-block%::location} to location of event-block
#					set {_lore::*} to uncolored lore of player's held item
#					replace all "||Type - " with "" in {_lore::*}
#					set {nodes::%player%::locations::%location of event-block%::type} to {_lore::*} parsed as item type
#					send action bar "&a&lPlaced a &9&l%{_lore::*}% &a&lnode!" to player